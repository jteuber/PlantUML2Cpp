@startuml Cpp

hide private members

namespace Cpp {
    namespace Common {
        class TranslatorUtils {
            +TranslatorUtils(Config config)
            +Type umlToCppType(PlantUml.Type umlType)
            +Type stringToCppType(string_view typeString)
            +Type decomposeType(string_view type)

            +string toNamespacedString(list<string> namespacedType)
            +string visibilityToString(PlantUml.Visibility vis)

            +list<string> getEffectiveNamespace(list<string> umlTypename)
            +vector<Class>.iterator findClass(list<string> umlTypename)
        }

        class CodeGeneratorUtils {
            +CodeGeneratorUtils(Config config)
            +string openNamespace(list<string> namespaces)
            +string closeNamespace(list<string> namespaces)
        }

        class Type << (S,#FFAA55) >>
        {
            +base : string
            +templateParams : vector<Type>
        }
    }
}
@enduml