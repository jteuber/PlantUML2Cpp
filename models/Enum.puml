@startuml Enum

hide private members

namespace Cpp {
    namespace Enum {
        ' *************** ALGORITHMS ***************
        class HeaderGenerator {
            +generate(Enum in) : string
        }

        class Translator
        {
            +visit(PlantUml.Variable v)     : bool
            +visit(PlantUml.Method m)       : bool
            +visit(PlantUml.Relationship r) : bool
            +visit(PlantUml.Container c)    : bool
            +visit(PlantUml.Element e)      : bool
            +visit(PlantUml.Note n)         : bool
            +visit(PlantUml.Separator s)    : bool
            +visit(PlantUml.Enumerator e)   : bool
            +visit(PlantUml.Parameter p)    : bool
            +visit(PlantUml.End e)          : bool
            +visit(PlantUml.Type t)         : bool

            +results() : vector<Enum>
        }
        Translator .|> PlantUml.AbstractVisitor
        Translator -left-> HeaderGenerator


        class EnumGenerator implements Main.Generator {
            +generate(PlantUml.SyntaxNode root) : vector<File>
        }
        EnumGenerator *-- Translator
        EnumGenerator *-- HeaderGenerator

        class Enum << (S,#FFAA55) >> {
            +name  : string
            +namespaces : list<string>
            +comment : string
        }
        class Enumerator << (S,#FFAA55) >> {
            +name : string
        }

        Enum *-- "0..*" Enumerator: enumerators
    }
}

@enduml